(*
PinScreen
==========
This file stores all methods that are used in the pinscreen-iterface.

Technically, I think you can call `PinScreen.EnterPin` to determine if the
bankscreen interface is open, by doing so it would enter the pin if there is one.

I think at some point this should probably be handled automatically by bankscreen
looking at the code this will be a bit troublesome now? - slacky

.. pascal::
    WriteLn(PinScreen.EnterPin()); // returns True if we got to the bank or GE
*)
{$IFNDEF CodeInsight}
procedure TRSPinScreen.__Setup();
begin
  with Self do
  begin
    FSlots := Box(37, 107, 318, 320).Partition(3,3); // unused, solved dynamically now
    FSlots.ModifySide('x2',-30);
    FSlots.ModifySide('y2',-6);
    FSlots.Append(Box(309, 107, 372, 170));
  end;
end;
{$ENDIF}

function TRSPinScreen._Find(): Boolean;
var
  P: TPoint;
begin
  Result := (srl.FindText(P, 'ielino', 'UpChars07_s', 255, 0, Box(21, 30, 151, 50)) or
             srl.FindText(P, 'xchang', 'UpChars07_s', 255, 0, Box(21, 30, 151, 50)));
end;

function TRSPinScreen.IsOpen(WaitTime: UInt32 = 0): Boolean;
var
  t: UInt64;
begin
  t := GetTickCount() + WaitTime;

  repeat
    if (Self._Find()) then
      Exit(True)
    else
      if (WaitTime > 0) then
        Wait(Random(25, 50));
  until (GetTickCount() >= t);
end;


// ----------------------------------------------------------------------------
// Searches for the number boxes for some amount of time
function TRSPinScreen.FindButtons(out Buttons: TBoxArray; SearchTime: Int32): Boolean;
var
  i: Int32;
  TPA: TPointArray;
  ATPA: T2DPointArray;
  t: TCountDown;
begin
  Buttons := [];
  t.Init(SearchTime);
  repeat
    if srl.FindColors(TPA, CTS2(988769, 10, 0.06, 1.28), MainScreen.GetBounds) then
    begin
      ATPA := TPA.Cluster(4);
      ATPA.FilterDimensions(45,45, 70,70);

      for i:=0 to High(ATPA) do
        Buttons += ATPA[i].Bounds();

      if (Length(Buttons) >= 10) then
        Exit(True);
    end;
  until t.IsFinished();
end;

// ----------------------------------------------------------------------------
// Sorts the boxes, so that box[0] contains the number 0, and so on
// will wait for 4 seconds, or until the text appears
function TRSPinScreen.SortButtons(var Buttons: TBoxArray; SearchTime: Int32): Boolean;
var
  i,j,count: Int32;
  p: TPoint;
  TBA: TBoxArray;
  _: TPointArray;
  t: TCountDown;
begin
  TBA := Copy(Buttons);
  Buttons := [];

  // wait for key-number to appear in the boxes
  t.Init(SearchTime);
  repeat
    count := 0;
    for i:=0 to High(TBA) do
      if (srl.FindColors(_, CTS1(32767,16), TBA[i]) > 0) then
        Inc(count);
    Wait(100,150);
  until t.IsFinished() or (count >= 9);

  // ensure that all the 10 digits was drawn, dont want no bullshit!
  if (count < 9) then
    Exit(False);

  // now sort the boxes so that Buttons[4] is the button for the number 4, and so on.
  SetLength(Buttons, 10);
  count := 0;
  for i:=0 to 9 do
    for j:=0 to High(TBA) do
      if srl.FindText(p, ToStr(i), 'UpChars07_s', 32767, 16, TBA[j].Expand(4)) then
      begin
        Buttons[i] := TBA[j];
        TBA.Del(j);
        Inc(count);
        Break;
      end;

  // if the mouse is over a number, it will disappear, this trick solves that
  for i:=0 to 9 do
    if (TBA <> []) and (Buttons[i] = []) then
    begin
      Buttons[i] := TBA[0];
      Inc(count);
      Break;
    end;

  // only return true if 10 numbers was added
  Result := (count = 10);
end;

// ----------------------------------------------------------------------------
// Debugging is always nice to have, and exists within the various interfaces
procedure TRSPinScreen.Debug();
var
  i: Int32;
  buttons: TBoxArray;
  muf: TMufasaBitmap;
begin
  muf := GetMufasaBitmap(BitmapFromClient(srl.DefaultClientBounds));

  FindButtons(buttons, Random(3000,4500));
  SortButtons(buttons, Random(4000,6500));
  for i:=0 to High(buttons) do
  begin
    muf.DrawBox(buttons[i], False, $00FF00);
    muf.DrawText(ToStr(i), Point(buttons[i].X1+5, buttons[i].Y1+5), $00FF00);
  end;

  muf.Debug();
end;

// ----------------------------------------------------------------------------
// Select that one key
function TRSPinScreen.SelectKey(x: Int32): Boolean;
var
  i: Int32;
  buttons: TBoxArray;
begin
  if (not FindButtons(buttons, Random(3000,4500))) then
    Exit(srl.WriteLn('Pinscreen.FindButtons Failed', False));

  if (not SortButtons(buttons, Random(4000,6500))) then
    Exit(srl.WriteLn('Pinscreen.SortButtons Failed', False));

  Mouse.Move(buttons[x]);
  Wait(90, 1000, wdLeft);
  Mouse.Click(buttons[x], MOUSE_LEFT);

  //if Random(4) = 0 then
  //begin
  //  Wait(50,120);
  //  Mouse.Move(buttons[Random(10)]);
  //  Wait(460, 1400, wdLeft);
  //end;

  Result := True;
end;

// ----------------------------------------------------------------------------
// Input the pin
function TRSPinScreen.EnterPin(): Boolean;
  function __EnterPin(Pin: String): Boolean;
  var
    i: Int32;
    p: TPoint;
    t: TCountDown;
    atStage: Boolean;
    stages: TStringArray = ['First', 'Now', 'Time', 'Finally'];
  begin
    for i:=0 to High(stages) do
    begin
      // wait for the current stage to show up (FIRST, SECOND, THIRD, FOURTH)
      atStage := False;
      t.Init(Random(3500, 5000));
      while(not t.IsFinished()) do
        if (atStage := srl.FindText(p, stages[i], 'UpChars07_s', Box(100, 80, 380, 100))) then
          Break;

      // try to click the key
      if (not atStage) or (not SelectKey(StrToInt(pin[i+1]))) then
        Exit(False);

      Wait(90,1000, wdLeft);
    end;

    Result := True;
  end;
var
  F,t: UInt64;
begin
  if (Players.GetCurrent()^.BankPin = '') or                // if no pin is defined
     (not PinScreen.IsOpen()) or                            // if pinscreen isn't open
     (not __EnterPin(Players.GetCurrent()^.BankPin)) then   // if it failed to enter the pin
  begin
    Exit(BankScreen.IsOpen() or GrandExchange.IsOpen());    // then just exit-check if we are in the bank or GE already
  end;

  // otherwise, we have a pin, pinscreen is open, and we didn't fail to enter the pin
  // so now we just wait for the bankscreen or GE to show up, and maybe retry if needed.
  t := GetTickCount() + Random(25000, 30000);
  while not (BankScreen.IsOpen() or GrandExchange.IsOpen()) do
  begin
    if Chatbox.ClickContinue() then // error message, something something wrong pin I assume, retry
    begin
      Inc(F);
      if (F = 3) then
        srl.WriteLn('Your pin is wrong!', dtFatal);

      __EnterPin(Players.GetCurrent()^.BankPin);
    end;

    Wait(60, 200);
    if (GetTickCount() > t) then
      Exit(False);
  end;

  Result := (BankScreen.IsOpen() or GrandExchange.IsOpen());
end;

begin
  PinScreen.__Setup();
end;
